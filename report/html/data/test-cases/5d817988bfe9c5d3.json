{
  "uid" : "5d817988bfe9c5d3",
  "name" : "test_login2[args0]",
  "fullName" : "scripts.test_login.TestLogin#test_login2",
  "historyId" : "b070444a4fe3f8109987bda83efe4674",
  "time" : {
    "start" : 1576647965057,
    "stop" : 1576648012643,
    "duration" : 47586
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <test_login.TestLogin object at 0x0000000003EB8F98>, args = {'password': '1996514lvp', 'toast': '登录成功', 'username': '17745164862'}\n\n    @allure.step(title=\"测试登录脚本\")\n    @pytest.mark.parametrize(\"args\", data_with_key(\"test_login2\"))\n    def test_login2(self, args):\n        username=args['username']\n        password=args['password']\n        toast=args['toast']\n        print(username,password,toast)\n        # 点击立即登录\n        allure.attach(\"点击立即登录\",\"立即登录按钮\")\n        self.login_page.click_now_login()\n        # 点击 密码登录\n        allure.attach(\"点击密码登录\", \"密码登录按钮\")\n        self.login_page.password_login()\n        # 5、输入手机号\n        allure.attach(\"输入手机号码\", username)\n        self.login_page.input_phone_number(username)\n        # 点击密码框\n        allure.attach(\"点击密码框\", \"点击密码框使其选中状态\")\n        self.login_page.click_password_text()\n        # 6、输入密码\n        allure.attach(\"输入密码\", password)\n        self.login_page.input_password(password)\n        # 7、点击登录\n        allure.attach(\"点击登录\", \"登录按钮\")\n        self.login_page.click_login()\n        # 断言登录是否成功\n        allure.attach('断言 \"判断对用提示\"是否存在',toast)\n>       dy=self.login_page.is_toast_exist(toast,True,\"login\")\n\nscripts\\test_login.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase\\base_action.py:41: in is_toast_exist\n    toa=self.find_toast(message, is_screenshot, screenshot_name, timeout=15, poll=0.05)\nbase\\base_action.py:33: in find_toast\n    element=self.find_elenent((By.XPATH,message),timeout,poll)\nbase\\base_action.py:26: in find_elenent\n    return WebDriverWait(self.driver,timeout,poll).until(lambda x:x.find_element(by,value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"86e29a0c-90b6-42fc-9c40-f26107869159\")>, method = <function BaseAction.find_elenent.<locals>.<lambda> at 0x0000000003F2C158>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <test_login.TestLogin object at 0x0000000003EB8F98>, args = {'password': '1996514lvp', 'toast': '登录成功', 'username': '17745164862'}\n\n    @allure.step(title=\"测试登录脚本\")\n    @pytest.mark.parametrize(\"args\", data_with_key(\"test_login2\"))\n    def test_login2(self, args):\n        username=args['username']\n        password=args['password']\n        toast=args['toast']\n        print(username,password,toast)\n        # 点击立即登录\n        allure.attach(\"点击立即登录\",\"立即登录按钮\")\n        self.login_page.click_now_login()\n        # 点击 密码登录\n        allure.attach(\"点击密码登录\", \"密码登录按钮\")\n        self.login_page.password_login()\n        # 5、输入手机号\n        allure.attach(\"输入手机号码\", username)\n        self.login_page.input_phone_number(username)\n        # 点击密码框\n        allure.attach(\"点击密码框\", \"点击密码框使其选中状态\")\n        self.login_page.click_password_text()\n        # 6、输入密码\n        allure.attach(\"输入密码\", password)\n        self.login_page.input_password(password)\n        # 7、点击登录\n        allure.attach(\"点击登录\", \"登录按钮\")\n        self.login_page.click_login()\n        # 断言登录是否成功\n        allure.attach('断言 \"判断对用提示\"是否存在',toast)\n>       dy=self.login_page.is_toast_exist(toast,True,\"login\")\n\nscripts\\test_login.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase\\base_action.py:41: in is_toast_exist\n    toa=self.find_toast(message, is_screenshot, screenshot_name, timeout=15, poll=0.05)\nbase\\base_action.py:33: in find_toast\n    element=self.find_elenent((By.XPATH,message),timeout,poll)\nbase\\base_action.py:26: in find_elenent\n    return WebDriverWait(self.driver,timeout,poll).until(lambda x:x.find_element(by,value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"86e29a0c-90b6-42fc-9c40-f26107869159\")>, method = <function BaseAction.find_elenent.<locals>.<lambda> at 0x0000000003F2C158>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "测试登录脚本",
      "time" : {
        "start" : 1576647965058,
        "stop" : 1576648012641,
        "duration" : 47583
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"c:\\users\\administrator\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\taobao\\scripts\\test_login.py\", line 93, in test_login2\n    dy=self.login_page.is_toast_exist(toast,True,\"login\")\n  File \"C:\\Users\\Administrator\\PycharmProjects\\taobao\\base\\base_action.py\", line 41, in is_toast_exist\n    toa=self.find_toast(message, is_screenshot, screenshot_name, timeout=15, poll=0.05)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\taobao\\base\\base_action.py\", line 33, in find_toast\n    element=self.find_elenent((By.XPATH,message),timeout,poll)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\taobao\\base\\base_action.py\", line 26, in find_elenent\n    return WebDriverWait(self.driver,timeout,poll).until(lambda x:x.find_element(by,value))\n  File \"c:\\users\\administrator\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c73e594be33f0500",
        "name" : "立即登录按钮",
        "source" : "c73e594be33f0500.attach",
        "type" : "text/plain",
        "size" : 18
      }, {
        "uid" : "35f1f4d1b59e3d29",
        "name" : "密码登录按钮",
        "source" : "35f1f4d1b59e3d29.attach",
        "type" : "text/plain",
        "size" : 18
      }, {
        "uid" : "caaec8c31b12b813",
        "name" : "17745164862",
        "source" : "caaec8c31b12b813.attach",
        "type" : "text/plain",
        "size" : 18
      }, {
        "uid" : "dcea3b8fa0c8e9",
        "name" : "点击密码框使其选中状态",
        "source" : "dcea3b8fa0c8e9.attach",
        "type" : "text/plain",
        "size" : 15
      }, {
        "uid" : "bf695932513491c8",
        "name" : "1996514lvp",
        "source" : "bf695932513491c8.attach",
        "type" : "text/plain",
        "size" : 12
      }, {
        "uid" : "43166b9a723b2607",
        "name" : "登录按钮",
        "source" : "43166b9a723b2607.attach",
        "type" : "text/plain",
        "size" : 12
      }, {
        "uid" : "c370f9e5c312321c",
        "name" : "登录成功",
        "source" : "c370f9e5c312321c.attach",
        "type" : "text/plain",
        "size" : 39
      } ],
      "parameters" : [ {
        "name" : "args",
        "value" : "{'username': '17745164862', 'password': '1996514lvp', 'toast': '登录成功'}"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 7,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 7,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "scripts"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "USER-20171125WC"
  }, {
    "name" : "thread",
    "value" : "8592-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scripts.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "args",
    "value" : "{'username': '17745164862', 'password': '1996514lvp', 'toast': '登录成功'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "5d817988bfe9c5d3.json",
  "parameterValues" : [ "{'username': '17745164862', 'password': '1996514lvp', 'toast': '登录成功'}" ]
}